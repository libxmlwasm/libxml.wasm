name: Build

on:
  push:
    paths-ignore:
      - "*.md"
      - ".*"
      - "*config*"
      - "!.github"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: "19"
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/metadata-action@v4
      if: false
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository }}/builder
        tags: |
          type=raw,value=latest
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
    - name: Cache source archive
      uses: actions/cache@v3
      with:
        path: |
          cache
          prefix
          wasm-build
        key: archive-${{ github.sha }}
        restore-keys: |
          archive-
    - name: Get UID, GID, Username
      run: |
        echo "HOST_UID=$(id -u)" >> "$GITHUB_ENV"
        echo "HOST_GID=$(id -u)" >> "$GITHUB_ENV"
        echo "HOST_USERNAME=$(whoami)" >> "$GITHUB_ENV"
        chmod 777 cache
    - uses: docker/bake-action@v3
      with:
        load: true
        files: docker-compose.yml
    - name: Build
      run: docker compose up
    - name: Create package tarball
      run: corepack yarn pack --install-if-needed -o libxmlwasm.tgz
    - name: Upload package tarball
      uses: actions/upload-artifact@v3
      with:
        name: libxmlwasm.tgz
        path: libxmlwasm.tgz
